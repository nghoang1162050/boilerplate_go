basePath: /api
definitions:
  dto.BaseResponse:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
  dto.ProductDto:
    properties:
      brand:
        type: string
      cpu:
        type: string
      created_at:
        type: string
      description:
        type: string
      gpu:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: number
      ram:
        type: string
      stock_quantity:
        minimum: 0
        type: integer
      storage:
        type: string
    required:
    - brand
    - created_at
    - description
    - id
    - name
    - price
    - stock_quantity
    type: object
  dto.UserLoginDTO:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  dto.UserRegisterDTO:
    properties:
      email:
        type: string
      password:
        type: string
      role_id:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
  description: This is a sample server boilerplate_go server.
  termsOfService: http://swagger.io/terms/
  title: Boilerplate Go API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate a user and return a JWT token
      parameters:
      - description: User login data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.UserLoginDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.BaseResponse'
      summary: Login user
      tags:
      - Auth
  /auth/me:
    get:
      description: Retrieve current user information using the JWT token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.BaseResponse'
      security:
      - ApiKeyAuth: []
      summary: Get user information
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Create a new user account
      parameters:
      - description: User registration data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.UserRegisterDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.BaseResponse'
      summary: Register a new user
      tags:
      - Auth
  /files/delete:
    delete:
      consumes:
      - application/json
      description: Deletes a file with the specified object name.
      parameters:
      - description: Object name
        in: query
        name: object_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: File deleted successfully
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.BaseResponse'
      summary: Delete File
      tags:
      - Files
  /files/download:
    get:
      consumes:
      - application/json
      description: Downloads a file identified by the object name.
      parameters:
      - description: Object name
        in: query
        name: object_name
        required: true
        type: string
      produces:
      - application/octet-stream
      responses:
        "200":
          description: File content
          schema:
            type: file
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "404":
          description: File Not Found
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.BaseResponse'
      summary: Download File
      tags:
      - Files
  /files/search:
    get:
      consumes:
      - application/json
      description: Searches and retrieves a list of files that match the given prefix.
      parameters:
      - description: Prefix for file search
        in: query
        name: prefix
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "404":
          description: No files found
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.BaseResponse'
      summary: Search Files
      tags:
      - Files
  /files/upload:
    post:
      consumes:
      - multipart/form-data
      description: Uploads a file using multipart form data.
      parameters:
      - description: File to upload
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.BaseResponse'
      summary: Upload File
      tags:
      - Files
  /products:
    get:
      consumes:
      - application/json
      description: Retrieves products based on search query, page number and page
        size.
      parameters:
      - description: Search Keyword
        in: query
        name: keyword
        type: string
      - description: Page Number (>=1)
        in: query
        name: pageNumber
        required: true
        type: integer
      - description: Page Size (>=1)
        in: query
        name: pageSize
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.BaseResponse'
      summary: Search Products
      tags:
      - Products
    post:
      consumes:
      - application/json
      description: Creates a new product with the provided payload.
      parameters:
      - description: Product Data
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/dto.ProductDto'
      produces:
      - application/json
      responses:
        "201":
          description: Product created
          schema:
            $ref: '#/definitions/dto.ProductDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.BaseResponse'
      summary: Create Product
      tags:
      - Products
  /products/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a product with the specified ID.
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.BaseResponse'
      summary: Delete Product
      tags:
      - Products
    get:
      consumes:
      - application/json
      description: Retrieves a product by its identifier.
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Product found
          schema:
            $ref: '#/definitions/dto.ProductDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.BaseResponse'
      summary: Get Product By ID
      tags:
      - Products
    put:
      consumes:
      - application/json
      description: Updates an existing product with the specified ID.
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated Product Data
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/dto.ProductDto'
      produces:
      - application/json
      responses:
        "200":
          description: Product updated
          schema:
            $ref: '#/definitions/dto.ProductDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.BaseResponse'
      summary: Update Product
      tags:
      - Products
  /products/all:
    get:
      consumes:
      - application/json
      description: Retrieves a list of all products.
      produces:
      - application/json
      responses:
        "200":
          description: List of products
          schema:
            items:
              $ref: '#/definitions/dto.ProductDto'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.BaseResponse'
      summary: List All Products
      tags:
      - Products
swagger: "2.0"
